[{"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\index.js":"1","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\App.js":"2","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\Footer.js":"3","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\auth.js":"4","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\Header.js":"5","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\Main.js":"6","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js":"7","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.js":"8","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.js":"9","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js":"10","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\ErrorPopup.js":"11","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\ConfirmationPopup.js":"12","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\Register.js":"13","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js":"14","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\Login.js":"15","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\InfoTooltip.js":"16","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\utils\\api.js":"17","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js":"18","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\Card.js":"19","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\PopupWithForm.js":"20","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\utils\\constants.js":"21","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\hoocks\\useFormValidations.js":"22"},{"size":665,"mtime":1662313214690,"results":"23","hashOfConfig":"24"},{"size":11174,"mtime":1662483804139,"results":"25","hashOfConfig":"24"},{"size":233,"mtime":1662313214572,"results":"26","hashOfConfig":"24"},{"size":1130,"mtime":1662367821990,"results":"27","hashOfConfig":"24"},{"size":953,"mtime":1662364055808,"results":"28","hashOfConfig":"24"},{"size":1494,"mtime":1662313214576,"results":"29","hashOfConfig":"24"},{"size":749,"mtime":1662367552500,"results":"30","hashOfConfig":"24"},{"size":1085,"mtime":1662366928316,"results":"31","hashOfConfig":"24"},{"size":2704,"mtime":1662366812129,"results":"32","hashOfConfig":"24"},{"size":2650,"mtime":1662366947178,"results":"33","hashOfConfig":"24"},{"size":889,"mtime":1662313214571,"results":"34","hashOfConfig":"24"},{"size":798,"mtime":1662367761362,"results":"35","hashOfConfig":"24"},{"size":1391,"mtime":1662368813615,"results":"36","hashOfConfig":"24"},{"size":320,"mtime":1662315732029,"results":"37","hashOfConfig":"24"},{"size":1155,"mtime":1662313214575,"results":"38","hashOfConfig":"24"},{"size":934,"mtime":1662370613347,"results":"39","hashOfConfig":"24"},{"size":2379,"mtime":1662313214690,"results":"40","hashOfConfig":"24"},{"size":84,"mtime":1662313214580,"results":"41","hashOfConfig":"24"},{"size":1300,"mtime":1662313214568,"results":"42","hashOfConfig":"24"},{"size":734,"mtime":1662367513183,"results":"43","hashOfConfig":"24"},{"size":3477,"mtime":1662313214690,"results":"44","hashOfConfig":"24"},{"size":1037,"mtime":1662313214607,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wxh15k",{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\index.js",[],[],"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\App.js",["119","120","121","122","123","124","125","126"],[],"import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { Route, Switch, useHistory } from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport api from \"../utils/api\";\r\nimport EditProfilePopup from \"../components/EditProfilePopup\";\r\nimport EditAvatarPopup from \"../components/EditAvatarPopup\";\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport ConfirmationPopup from \"./ConfirmationPopup\";\r\nimport ErrorPopup from \"./ErrorPopup\";\r\nimport Register from \"./Register\";\r\nimport Login from \"./Login\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport InfoTooltip from \"./InfoTooltip\";\r\nimport * as auth from \"../auth\";\r\n\r\nfunction App() {\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [currentUser, setСurrentUser] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n  const [deletedCard, setDeletedCard] = useState(null);\r\n  const [isRequestingServer, setIsRequestingServer] = useState(false);\r\n  const [serverError, setServerError] = useState(null);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const closeConfirmationPopup = useCallback(() => {\r\n    setDeletedCard(null);\r\n  }, []);\r\n\r\n  const openConfirmationPopup = useCallback((card) => {\r\n    setDeletedCard(card);\r\n  }, []);\r\n\r\n  const closeErrorPopup = useCallback(() => {\r\n    setServerError(null);\r\n  }, []);\r\n\r\n  const openErrorPopup = useCallback((error) => {\r\n    setServerError(error);\r\n  }, []);\r\n\r\n  const handleCardLike = useCallback(\r\n    (card) => {\r\n      const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n      if (isLiked) {\r\n        api\r\n          .unlikeCard(card._id)\r\n          .then((res) => {\r\n            setCards((state) =>\r\n              state.map((c) => (c._id === card._id ? res : c))\r\n            );\r\n          })\r\n          .catch((err) => {\r\n            console.log(`Ошибка с кодом: ${err.errorCode}`);\r\n            console.dir(err);\r\n            openErrorPopup(err);\r\n          });\r\n      } else {\r\n        api\r\n          .setlikeCard(card._id)\r\n          .then((res) => {\r\n            setCards((state) =>\r\n              state.map((c) => (c._id === card._id ? res : c))\r\n            );\r\n          })\r\n          .catch((err) => {\r\n            console.log(`Ошибка с кодом: ${err.errorCode}`);\r\n            console.dir(err);\r\n            openErrorPopup(err);\r\n          });\r\n      }\r\n    },\r\n    [currentUser]\r\n  );\r\n\r\n  const handleCardDelete = useCallback((card) => {\r\n    setIsRequestingServer(true);\r\n    api\r\n      .deleteCard(card._id)\r\n      .then(() => {\r\n        setCards((state) => state.filter((c) => c._id !== card._id && c));\r\n        closeConfirmationPopup();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка с кодом: ${err.errorCode}`);\r\n        console.dir(err);\r\n        openErrorPopup(err);\r\n      })\r\n      .finally(() => {\r\n        setIsRequestingServer(false);\r\n      });\r\n  }, []);\r\n\r\n  const handleCardClick = useCallback((card) => {\r\n    setSelectedCard(card);\r\n  }, []);\r\n\r\n  const handleEditAvatarClick = useCallback(() => {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }, []);\r\n\r\n  const handleEditProfileClick = useCallback(() => {\r\n    setIsEditProfilePopupOpen(true);\r\n  }, []);\r\n\r\n  const handleAddPlaceClick = useCallback(() => {\r\n    setIsAddPlacePopupOpen(true);\r\n  }, []);\r\n\r\n  const closeAllPopups = useCallback(() => {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setSelectedCard(null);\r\n    setIsInfoTooltipOpen(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      isEditAvatarPopupOpen ||\r\n      isEditProfilePopupOpen ||\r\n      isAddPlacePopupOpen ||\r\n      selectedCard ||\r\n      isInfoTooltipOpen\r\n    ) {\r\n      function handleEscClose(evt) {\r\n        if (evt.key === \"Escape\") {\r\n          closeAllPopups();\r\n        }\r\n      }\r\n\r\n      document.addEventListener(\"keydown\", handleEscClose);\r\n\r\n      return () => {\r\n        document.removeEventListener(\"keydown\", handleEscClose);\r\n      };\r\n    }\r\n  }, [\r\n    isEditAvatarPopupOpen,\r\n    isEditProfilePopupOpen,\r\n    isAddPlacePopupOpen,\r\n    selectedCard,\r\n    isInfoTooltipOpen,\r\n  ]);\r\n\r\n  const handleOverlayClick = (evt) => {\r\n    if (evt.target === evt.currentTarget) {\r\n      console.log(evt.target === evt.currentTarget)\r\n      closeAllPopups();\r\n    }\r\n  };\r\n\r\n  const handleUpdateUser = useCallback((data) => {\r\n    setIsRequestingServer(true);\r\n    api\r\n      .patchProfile(data)\r\n      .then((res) => {\r\n        setСurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка с кодом: ${err.errorCode}`);\r\n        console.dir(err);\r\n        openErrorPopup(err);\r\n      })\r\n      .finally(() => {\r\n        setTimeout(() => {\r\n          setIsRequestingServer(false);\r\n        }, 300);\r\n      });\r\n  }, []);\r\n\r\n  const handleUpdateAvatar = useCallback((data) => {\r\n    setIsRequestingServer(true);\r\n    api\r\n      .setNewAvatar(data)\r\n      .then((res) => {\r\n        console.dir(res);\r\n        setСurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка с кодом: ${err.errorCode}`);\r\n        console.dir(err);\r\n        openErrorPopup(err);\r\n      })\r\n      .finally(() => {\r\n        setTimeout(() => {\r\n          setIsRequestingServer(false);\r\n        }, 300);\r\n      });\r\n  }, []);\r\n\r\n  const handleAddPlaceSubmit = useCallback(\r\n    (data) => {\r\n      setIsRequestingServer(true);\r\n      api\r\n        .addNewCard(data)\r\n        .then((res) => {\r\n          setCards([res, ...cards]);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) => {\r\n          console.log(`Ошибка с кодом: ${err.errorCode}`);\r\n          console.dir(err);\r\n          openErrorPopup(err);\r\n        })\r\n        .finally(() => {\r\n          setTimeout(() => {\r\n            setIsRequestingServer(false);\r\n          }, 300);\r\n        });\r\n    },\r\n    [cards]\r\n  );\r\n\r\n  useEffect(() => {\r\n    Promise.all([api.getUser(), api.getCards()])\r\n      .then(([user, cards]) => {\r\n        setСurrentUser(user);\r\n        setCards(cards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Ошибка с кодом: ${err.errorCode}`);\r\n        console.dir(err);\r\n        openErrorPopup(err);\r\n      });\r\n  }, []);\r\n\r\n//ниже реализован функционал 12 спринта\r\n  const handleSignUp = ({ email, password }) => {\r\n    if (!email || !password) {\r\n      return;\r\n    }\r\n    auth\r\n      .register(email, password)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          setLoggedIn(true);\r\n          setIsInfoTooltipOpen(true);\r\n          setTimeout(() => {\r\n            history.push(\"/sign-in\");\r\n          }, 800);\r\n        } else {\r\n          setLoggedIn(false);\r\n          setIsInfoTooltipOpen(true);\r\n          // setTimeout(() => {\r\n          //   history.push(\"/sign-in\");\r\n          // }, 800);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleLogin = ({ email, password }) => {\r\n    auth\r\n      .authorize(email, password)\r\n      .then((data) => {\r\n        if (data.token) {\r\n          setTimeout(() => {\r\n            setLoggedIn(true);\r\n            setEmail(email)\r\n            history.push(\"/\");\r\n          }, 100);\r\n        } else {\r\n          setLoggedIn(false);\r\n          setIsInfoTooltipOpen(true);\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    tokenCheck();\r\n  }, []);\r\n\r\n  function signOut() {\r\n    localStorage.removeItem(\"jwt\");\r\n    history.push(\"/sign-in\");\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  function tokenCheck() {\r\n    if (localStorage.getItem(\"jwt\")) {\r\n      const jwt = localStorage.getItem(\"jwt\");\r\n      // здесь будем проверять токен\r\n      auth.getContent(jwt).then((res) => {\r\n        setEmail(res.data.email);\r\n        if (res) {\r\n          setLoggedIn(true);\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <Header signOut={signOut} email={email} />\r\n      <Switch>\r\n        <ProtectedRoute\r\n          loggedIn={loggedIn}\r\n          exact\r\n          path=\"/\"\r\n          component={\r\n            <Main\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onCardClick={handleCardClick}\r\n              cards={cards}\r\n              onCardLike={handleCardLike}\r\n              onCardDelete={openConfirmationPopup}\r\n            />\r\n          }\r\n        />\r\n        <Route path=\"/sign-up\">\r\n          <Register onSignUp={handleSignUp} />\r\n          <InfoTooltip\r\n            loggedIn={loggedIn}\r\n            isOpen={isInfoTooltipOpen}\r\n            onClose={closeAllPopups}\r\n            handleOverlayClick={handleOverlayClick}\r\n          />\r\n        </Route>\r\n\r\n        <Route path=\"/sign-in\">\r\n          <Login onLogin={handleLogin} />\r\n          <InfoTooltip\r\n            loggedIn={loggedIn}\r\n            isOpen={isInfoTooltipOpen}\r\n            onClose={closeAllPopups}\r\n            handleOverlayClick={handleOverlayClick}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n      <Footer />\r\n      <EditProfilePopup\r\n        isOpen={isEditProfilePopupOpen}\r\n        onClose={closeAllPopups}\r\n        onUpdateUser={handleUpdateUser}\r\n        isRequesting={isRequestingServer}\r\n        handleOverlayClick={handleOverlayClick}\r\n      />\r\n      <AddPlacePopup\r\n        isOpen={isAddPlacePopupOpen}\r\n        onClose={closeAllPopups}\r\n        onAddPlace={handleAddPlaceSubmit}\r\n        isRequesting={isRequestingServer}\r\n        handleOverlayClick={handleOverlayClick}\r\n      />\r\n      <EditAvatarPopup\r\n        isOpen={isEditAvatarPopupOpen}\r\n        onClose={closeAllPopups}\r\n        onUpdateAvatar={handleUpdateAvatar}\r\n        isRequesting={isRequestingServer}\r\n        handleOverlayClick={handleOverlayClick}\r\n      />\r\n      <ConfirmationPopup\r\n        card={deletedCard}\r\n        onSubmit={handleCardDelete}\r\n        onClose={closeConfirmationPopup}\r\n        isRequesting={isRequestingServer}\r\n      />\r\n      <ImagePopup\r\n        title=\"Посмотреть в полном размере\"\r\n        name=\"image\"\r\n        card={selectedCard}\r\n        onClose={closeAllPopups}\r\n        handleOverlayClick={handleOverlayClick}\r\n      />\r\n      <ErrorPopup error={serverError} onClose={closeErrorPopup} />\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default React.memo(App);\r\n","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\Footer.js",["127"],[],"import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">© {(new Date).getFullYear()} Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\auth.js",[],[],"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\Header.js",[],[],"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\Main.js",["128"],[],"import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Main({\r\n  onEditProfile,\r\n  onAddPlace,\r\n  onEditAvatar,\r\n  onCardClick,\r\n  cards,\r\n  onCardLike,\r\n  onCardDelete,\r\n}) {\r\n  \r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const cardsElements = cards.map((item) => (\r\n    <Card\r\n      key={item._id}\r\n      card={item}\r\n      onClick={onCardClick}\r\n      onCardLike={onCardLike}\r\n      onTrashClick={onCardDelete}\r\n    />\r\n  ));\r\n  \r\n  return (\r\n    <main className=\"main\">\r\n      <section className=\"profile\">\r\n        <button\r\n          className=\"profile__btn-edit-avatar\"\r\n          onClick={onEditAvatar}\r\n        />\r\n        <img\r\n          className=\"profile__avatar\"\r\n          src={currentUser.avatar}\r\n        />\r\n        <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n        <button\r\n          className=\"profile__btn profile__btn_type_edit\"\r\n          type=\"button\"\r\n          aria-label=\"Редактировать\"\r\n          onClick={onEditProfile}\r\n        />\r\n        <p className=\"profile__about\">{currentUser.about}</p>\r\n        <button\r\n          className=\"profile__btn profile__btn_type_add\"\r\n          type=\"button\"\r\n          aria-label=\"Добавить\"\r\n          onClick={onAddPlace}\r\n        />\r\n      </section>\r\n      <section className=\"elements\">\r\n        {cardsElements}\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default React.memo(Main);\r\n","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js",[],[],"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.js",[],[],"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.js",["129"],[],"import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\nimport useFormValidations from \"../hoocks/useFormValidations\";\r\nimport {editProfileInitialValues} from '../utils/constants'\r\n\r\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser, isRequesting, handleOverlayClick}) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const {values, isErrors, errorMessages, handleValueChange, setValues, resetErrors} = useFormValidations(editProfileInitialValues);\r\n\r\n  React.useEffect(() => {\r\n    if (!!currentUser.name && !!currentUser.about && isOpen) {\r\n      setValues({ \"input-name\": currentUser.name, \"input-about\": currentUser.about });\r\n      resetErrors();\r\n    }\r\n  }, [currentUser.name, currentUser.about, isOpen]); \r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault();\r\n    onUpdateUser({\r\n        name: values[\"input-name\"],\r\n        about: values[\"input-about\"]\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Редактировать профиль\"\r\n      name=\"edit\"\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      handleOverlayClick={handleOverlayClick}\r\n    >\r\n      <input\r\n        className={`popup__input popup__input_type_name ${isErrors[\"input-name\"] ? 'popup__input_type_error' : '' }`}\r\n        name=\"input-name\"\r\n        type=\"text\"\r\n        placeholder=\"Имя\"\r\n        required\r\n        minLength=\"2\"\r\n        maxLength=\"40\"\r\n        value={values[\"input-name\"]}\r\n        onChange={handleValueChange}\r\n      />\r\n      <span className={`form__input-error input-about-error ${isErrors[\"input-name\"] ? 'popup__input-error_active' : '' }`}>{errorMessages[\"input-name\"]}</span>\r\n      <input\r\n        className={`popup__input popup__input_type_about ${isErrors[\"input-about\"] ? 'popup__input_type_error' : '' }`}\r\n        name=\"input-about\"\r\n        type=\"text\"\r\n        placeholder=\"О себе\"\r\n        required\r\n        minLength=\"2\"\r\n        maxLength=\"200\"\r\n        value={values[\"input-about\"]}\r\n        onChange={handleValueChange}\r\n      />\r\n      <span className={`form__input-error input-about-error ${isErrors[\"input-about\"] ? 'popup__input-error_active' : '' }`}>{errorMessages[\"input-about\"]}</span>\r\n      <button \r\n        className={`popup__btn-save form__submit ${Object.values(isErrors).some((item) => item) ? 'form__submit_inactive' : ''}`} \r\n        type=\"submit\" \r\n        disabled={Object.values(isErrors).some((item) => item)} >\r\n        {isRequesting ? 'Сохранение..' : \"Сохранить\"}\r\n      </button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default React.memo(EditProfilePopup);\r\n","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js",["130"],[],"import React, { useEffect } from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport useFormValidations from \"../hoocks/useFormValidations\";\r\nimport {addPlaceInitialValues} from '../utils/constants'\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace, isRequesting, handleOverlayClick }) {\r\n  const {\r\n    values,\r\n    isErrors,\r\n    errorMessages,\r\n    handleValueChange,\r\n    setValues,\r\n    resetErrors,\r\n  } = useFormValidations(addPlaceInitialValues);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onAddPlace({\r\n      name: values[\"input-place\"],\r\n      link: values[\"input-link\"],\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setValues({ \"input-place\": \"\", \"input-link\": \"\" });\r\n      resetErrors();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Новое место\"\r\n      name=\"add\"\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n      handleOverlayClick={handleOverlayClick}\r\n    >\r\n      <input\r\n        className={`popup__input popup__input_type_caption ${\r\n          isErrors[\"input-place\"] ? \"popup__input_type_error\" : \"\"\r\n        }`}\r\n        name=\"input-place\"\r\n        type=\"text\"\r\n        placeholder=\"Название\"\r\n        required\r\n        minLength=\"2\"\r\n        maxLength=\"30\"\r\n        value={values[\"input-place\"]}\r\n        onChange={handleValueChange}\r\n      />\r\n      <span\r\n        className={`form__input-error input-name-error ${\r\n          isErrors[\"input-place\"] ? \"popup__input-error_active\" : \"\"\r\n        }`}\r\n      >\r\n        {errorMessages[\"input-place\"]}\r\n      </span>\r\n      <input\r\n        className={`popup__input popup__input_type_link ${\r\n          isErrors[\"input-link\"] ? \"popup__input_type_error\" : \"\"\r\n        }`}\r\n        name=\"input-link\"\r\n        type=\"url\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        required\r\n        value={values[\"input-link\"]}\r\n        onChange={handleValueChange}\r\n      />\r\n      <span\r\n        className={`form__input-error input-link-error ${\r\n          isErrors[\"input-link\"] ? \"popup__input-error_active\" : \"\"\r\n        }`}\r\n      >\r\n        {errorMessages[\"input-link\"]}\r\n      </span>\r\n      <button\r\n        className={`popup__btn-save form__submit ${\r\n          Object.values(isErrors).some((item) => item)\r\n            ? \"form__submit_inactive\"\r\n            : \"\"\r\n        }`}\r\n        type=\"submit\"\r\n        disabled={Object.values(isErrors).some((item) => item)}\r\n      >\r\n        {isRequesting ? 'Создание..' : \"Создать\"}\r\n      </button>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default React.memo(AddPlacePopup);\r\n","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\ErrorPopup.js",[],[],"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\ConfirmationPopup.js",[],[],"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\Register.js",[],[],"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js",[],[],"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\Login.js",[],[],"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\InfoTooltip.js",[],[],"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\utils\\api.js",["131"],[],"import { data } from \"autoprefixer\";\r\n// import { apiConfig } from './constants'\r\n\r\nconst apiConfig = {\r\n  url: \"https://nomoreparties.co/v1/cohort-45\",\r\n  headers: {\r\n    authorization: \"672e954f-60da-45a7-8529-433a3c093bb6\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nclass Api {\r\n  constructor(config) {\r\n    this._url = config.url;\r\n    this._headers = config.headers;\r\n  }\r\n\r\n  async _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    const errorCode = res.status;\r\n    const err = await res.json();\r\n    err.errorCode = errorCode;\r\n    return Promise.reject(err);\r\n  }\r\n\r\n  getUser() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  getCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: \"GET\",\r\n      headers: this._headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  patchProfile(data) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.about,\r\n      }),\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  addNewCard(data) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link,\r\n      }),\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  setlikeCard(cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\r\n      method: \"PUT\",\r\n      headers: this._headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  unlikeCard(cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\r\n      method: \"DELETE\",\r\n      headers: this._headers,\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n\r\n  setNewAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data,\r\n      }),\r\n    }).then((res) => this._checkResponse(res));\r\n  }\r\n}\r\n\r\nconst api = new Api(apiConfig);\r\n\r\nexport default api;\r\n","C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js",[],[],"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\Card.js",[],[],"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\components\\PopupWithForm.js",[],[],"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\utils\\constants.js",[],[],"C:\\Users\\Lenovo\\dev\\react-mesto-api-full\\frontend\\src\\hoocks\\useFormValidations.js",["132","133"],[],"import React, { useState, useCallback } from \"react\";\r\n\r\nfunction useFormValidations(initialValues) {\r\n  const {inputValues, errorValues, errorStates} = initialValues;\r\n  const [values, setValues] = useState(inputValues);\r\n  const [errorMessages, setErrorMessages] = useState(errorValues);\r\n  const [isErrors, setIsErrors] = useState(errorStates);\r\n\r\n  const handleValueChange = (e) => {\r\n    const {\r\n      target: {\r\n        value,\r\n        validationMessage,\r\n        name,\r\n        validity: { valid },\r\n      },\r\n    } = e;\r\n    setValues({ ...values, [name]: value });\r\n    setIsErrors({ ...isErrors, [name]: !valid });\r\n    if (!valid) {\r\n      setErrorMessages({ ...errorMessages, [name]: validationMessage });\r\n    } else {\r\n      setErrorMessages({ ...errorMessages, [name]: \"\" });\r\n    }\r\n  };\r\n\r\n  function resetErrors() {\r\n    setIsErrors(errorStates);\r\n    setErrorMessages(errorValues);\r\n  }\r\n\r\n  return {values, isErrors, errorMessages, handleValueChange, setValues, resetErrors};\r\n}\r\n\r\nexport default useFormValidations;",{"ruleId":"134","severity":1,"message":"135","line":84,"column":5,"nodeType":"136","endLine":84,"endColumn":18,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"138","line":103,"column":6,"nodeType":"136","endLine":103,"endColumn":8,"suggestions":"139"},{"ruleId":"134","severity":1,"message":"140","line":149,"column":6,"nodeType":"136","endLine":155,"endColumn":4,"suggestions":"141"},{"ruleId":"134","severity":1,"message":"142","line":182,"column":6,"nodeType":"136","endLine":182,"endColumn":8,"suggestions":"143"},{"ruleId":"134","severity":1,"message":"142","line":203,"column":6,"nodeType":"136","endLine":203,"endColumn":8,"suggestions":"144"},{"ruleId":"134","severity":1,"message":"142","line":225,"column":5,"nodeType":"136","endLine":225,"endColumn":12,"suggestions":"145"},{"ruleId":"134","severity":1,"message":"146","line":239,"column":6,"nodeType":"136","endLine":239,"endColumn":8,"suggestions":"147"},{"ruleId":"134","severity":1,"message":"148","line":286,"column":6,"nodeType":"136","endLine":286,"endColumn":8,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":6,"column":44,"nodeType":"152","messageId":"153","endLine":6,"endColumn":52,"fix":"154"},{"ruleId":"155","severity":1,"message":"156","line":33,"column":9,"nodeType":"157","endLine":36,"endColumn":11},{"ruleId":"134","severity":1,"message":"158","line":16,"column":6,"nodeType":"136","endLine":16,"endColumn":51,"suggestions":"159"},{"ruleId":"134","severity":1,"message":"160","line":29,"column":6,"nodeType":"136","endLine":29,"endColumn":14,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":14},{"ruleId":"162","severity":1,"message":"166","line":1,"column":8,"nodeType":"164","messageId":"165","endLine":1,"endColumn":13},{"ruleId":"162","severity":1,"message":"167","line":1,"column":27,"nodeType":"164","messageId":"165","endLine":1,"endColumn":38},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'openErrorPopup'. Either include it or remove the dependency array.","ArrayExpression",["168"],"React Hook useCallback has missing dependencies: 'closeConfirmationPopup' and 'openErrorPopup'. Either include them or remove the dependency array.",["169"],"React Hook useEffect has a missing dependency: 'closeAllPopups'. Either include it or remove the dependency array.",["170"],"React Hook useCallback has missing dependencies: 'closeAllPopups' and 'openErrorPopup'. Either include them or remove the dependency array.",["171"],["172"],["173"],"React Hook useEffect has a missing dependency: 'openErrorPopup'. Either include it or remove the dependency array.",["174"],"React Hook useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.",["175"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"176","text":"177"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook React.useEffect has missing dependencies: 'resetErrors' and 'setValues'. Either include them or remove the dependency array.",["178"],"React Hook useEffect has missing dependencies: 'resetErrors' and 'setValues'. Either include them or remove the dependency array.",["179"],"no-unused-vars","'data' is defined but never used.","Identifier","unusedVar","'React' is defined but never used.","'useCallback' is defined but never used.",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"186","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},[147,147],"()",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [currentUser._id, openErrorPopup]",{"range":"199","text":"200"},"Update the dependencies array to be: [closeConfirmationPopup, openErrorPopup]",{"range":"201","text":"202"},"Update the dependencies array to be: [isEditAvatarPopupOpen, isEditProfilePopupOpen, isAddPlacePopupOpen, selectedCard, isInfoTooltipOpen, closeAllPopups]",{"range":"203","text":"204"},"Update the dependencies array to be: [closeAllPopups, openErrorPopup]",{"range":"205","text":"206"},{"range":"207","text":"206"},"Update the dependencies array to be: [cards, closeAllPopups, openErrorPopup]",{"range":"208","text":"209"},"Update the dependencies array to be: [openErrorPopup]",{"range":"210","text":"211"},"Update the dependencies array to be: [tokenCheck]",{"range":"212","text":"213"},"Update the dependencies array to be: [currentUser.name, currentUser.about, isOpen, setValues, resetErrors]",{"range":"214","text":"215"},"Update the dependencies array to be: [isOpen, resetErrors, setValues]",{"range":"216","text":"217"},[2923,2936],"[currentUser._id, openErrorPopup]",[3441,3443],"[closeConfirmationPopup, openErrorPopup]",[4564,4696],"[isEditAvatarPopupOpen, isEditProfilePopupOpen, isAddPlacePopupOpen, selectedCard, isInfoTooltipOpen, closeAllPopups]",[5371,5373],"[closeAllPopups, openErrorPopup]",[5898,5900],[6451,6458],"[cards, closeAllPopups, openErrorPopup]",[6796,6798],"[openErrorPopup]",[7950,7952],"[tokenCheck]",[777,822],"[currentUser.name, currentUser.about, isOpen, setValues, resetErrors]",[768,776],"[isOpen, resetErrors, setValues]"]